generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id Int @id @default(autoincrement())

  name String
  email String @unique
  avatar String
  status String

  createdAlbums  Album[] @relation("album-creator")
  followedAlbums Album[] @relation("album-follower")

  createdPosts  Post[] @relation("post-creator")
  followedPosts Post[] @relation("post-follower")

  friendUsers User[] @relation("friends")
  friendOf    User[] @relation("friends")

  chats ChatRoom[] @relation("participants")

  messages Message[] @relation("sender")
  
  deleted Boolean @default(false)
}

model ChatRoom {
  id Int @id @default(autoincrement())

  participants User[] @relation("participants")

  messages Message[]

  deleted Boolean @default(false)
}

model Post {
  id      Int    @id @default(autoincrement())
  content String

  createdPosts  User[] @relation("post-creator")
  followedPosts User[] @relation("post-follower")

  deleted Boolean @default(false)
}

model Album {
  id   Int    @id @default(autoincrement())
  name String @unique
  image String

  createdAlbums  User[] @relation("album-creator")
  followedAlbums User[] @relation("album-follower")

  songs Song[]

  deleted Boolean @default(false)
}

model Song {
  id Int @id @default(autoincrement())
  name String

  album   Album @relation(fields: [albumId], references: [id])
  albumId Int

  sourse String
  
  deleted Boolean @default(false)
}

model Message {
  id      Int    @id @default(autoincrement())
  content String

  sender   User @relation("sender", fields: [senderId], references: [id])
  senderId Int

  chatRoom   ChatRoom @relation(fields: [chatRoomId], references: [id])
  chatRoomId Int

  deleted Boolean @default(false)
}
